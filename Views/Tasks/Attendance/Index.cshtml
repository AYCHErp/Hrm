@model IEnumerable<MixERP.HRM.DTO.EmployeeView>

@{
    ViewBag.Title = "Attendance";
    Layout = ViewBag.Layout;
}

<style>
    th.mini {
        width: 150px;
    }
</style>
<div class="ui attached padded attendance segment" style="display: none;">
    <div class="ui huge header" data-localize="UpdateAttendanceRecord"></div>
    <div class="ui divider"></div>

    <div class="ui form bpad16" style="width: 440px;">
        <div class="two fields">
            <div class="ui field">
                <label>For Date</label>
                <input type="text" id="DateInputText" class="date" />
            </div>
            <div class="ui field">
                <label>&nbsp;</label>
                <button id="ShowButton" class="ui green button">Show</button>
            </div>
        </div>
    </div>

    <table class="ui attached form attendance table">
        <thead>
            <tr>
                <th class="mini" data-localize="EmployeeId"></th>
                <th data-localize="EmployeeName"></th>
                <th class="mini">
                    <div data-localize="WasPresent"></div>
                    <div class="ui was present checkbox" style="padding: 0.5em;">
                        <input type="checkbox">
                        <label data-localize="Yes"></label>
                    </div>
                </th>
                <th class="mini">
                    <label data-localize="CheckInTime"></label>
                    <div class="ui action fluid input">
                        <input type="time" class="check-in time" />
                        <button class="ui icon button" data-localized-title="UpdateEmptyCheckIns" onclick="updateCheckIns()">
                            <i class="chevron right icon"></i>
                        </button>
                    </div>
                </th>
                <th class="mini">
                    <label data-localize="CheckOutTime"></label>
                    <div class="ui action fluid input">
                        <input type="time" class="check-out time" />
                        <button class="ui icon button" data-localized-title="UpdateEmptyCheckOuts" onclick="updateCheckOuts()">
                            <i class="chevron right icon"></i>
                        </button>
                    </div>
                </th>
                <th class="mini" data-localize="OvertimeHours"></th>
                <th data-localize="AbsenteismReason"></th>
                <th class="mini" data-localize="Update"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Model)
            {
                <tr data-employee-id="@employee.EmployeeId" data-attendance-id="">
                    <td>@employee.EmployeeId</td>
                    <td>@employee.FirstName @employee.MiddleName @employee.LastName</td>
                    <td>
                        <div class="ui was present checkbox">
                            <input type="checkbox">
                            <label>Yes</label>
                        </div>
                    </td>
                    <td>
                        <input type="time" class="check-in time" />
                    </td>
                    <td>
                        <input type="time" class="check-out time" />
                    </td>
                    <td>
                        <input type="text" class="decimal overtime-hours" />
                    </td>
                    <td><input type="text" class="reason" /></td>
                    <td><button class="ui button">Update</button></td>
                </tr>
            }
        </tbody>
    </table>

    <div class="vpad8">
        <button onclick="updateAll()" class="ui teal button">Update All</button>
    </div>

</div>

<script>
    loadUI();
    $(".attendance.segment").fadeIn(1000);
    $(".ui.checkbox").checkbox();

    $("#ShowButton").off("click").on("click", function () {
        function request(date) {
            const url = "/api/forms/hrm/attendances/get-where/-1/";

            const filters = [];
            filters.push(window.getAjaxColumnFilter("WHERE", "AttendanceDate", "System.DateTime", window.FilterConditions.IsEqualTo, date));
            const data = JSON.stringify(filters);

            return window.getAjaxRequest(url, "POST", data);
        };

        const date = window.parseLocalizedDate($("#DateInputText").val());

        const ajax = request(date);

        ajax.success(function (attendance) {
            alert(JSON.stringify(attendance));
            //const a = window.Enumerable.From(attendance)
            //    .Where(function (x) { return x.EmployeeId === employee.EmployeeId }).FirstOrDefault() || new Object();

            //a.CheckInTime = (a.CheckInTime || "").toString().toTime();
            //a.CheckOutTime = (a.CheckOutTime || "").toString().toTime();
            //employees[i].Attendance = a;
        });
    });

    function updateAll() {
        function request(attendnaces) {
            const url = "/api/forms/hrm/attendance/bulk-import";
            const data = JSON.stringify(attendnaces);

            return window.getAjaxRequest(url, "POST", data);
        };

        function getModel() {
            function getTime(el) {
                const time = el.val();
                const regex = /^\s*([01]?\d|2[0-3]):?([0-5]\d)\s*$/;

                if (regex.test(time)) {
                    return time;
                };

                return null;
            };

            function getAttendance(row) {
                const attendanceDate = window.parseLocalizedDate($("#DateInputText").val());
                const attendanceId = (row.attr("data-attendance-id") || null);
                const employeeId = row.attr("data-employee-id");
                const isPresent = row.find("input:checkbox").is(":checked");
                const checkInTime = getTime(row.find("input.check-in"));
                const checkOutTime = getTime(row.find("input.check-out"));
                const overTimeHours = window.parseFloat2(row.find("input.overtime-hours").val()) || 0;
                const reason = row.find("input.reason").val();

                const attenance =
                {
                    AttendanceId: attendanceId,
                    OfficeId: window.metaView.OfficeId,
                    EmployeeId: employeeId,
                    AttendanceDate: attendanceDate,
                    WasPresent: isPresent,
                    CheckInTime: isPresent ? checkInTime : null,
                    CheckOutTime: isPresent ? checkOutTime : null,
                    OvertimeHours: overTimeHours,
                    WasAbsent: !isPresent,
                    ReasonForAbsenteeism: !isPresent ? reason : null,
                    AuditUserId: window.userId,
                    AuditTs: new Date()
                };

                return attenance;
            };

            const candidates = $("table.attendance tbody tr");
            const model = [];



            $.each(candidates, function () {
                const row = $(this);

                const attendance = getAttendance(row);
                model.push(attendance);
            });


            return model;
        };

        const model = getModel();
        const ajax = request(model);

        ajax.success(function () {
            window.location = window.location.pathname;
        });
    };

    $(".attendance.table thead input[type='checkbox']").off("change").on("change", function () {
        const el = $(this);
        const state = el.is(":checked");

        $(".attendance.table tbody input[type='checkbox']").prop("checked", state);
    });

    function updateCheckIns() {
        var value = $(".attendance.table thead input.check-in.time").val();


        $(".attendance.table tbody input.check-in.time").each(function () {
            const el = $(this);
            if (!el.val().trim()) {
                el.val(value);
            };
        });
    };


    function updateCheckOuts() {
        var value = $(".attendance.table thead input.check-out.time").val();


        $(".attendance.table tbody input.check-out.time").each(function () {
            const el = $(this);
            if (!el.val().trim()) {
                el.val(value);
            };
        });
    };
</script>